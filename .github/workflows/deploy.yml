name: Build & Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:

  vars:
    name: Vars Job
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'production'
    outputs:
      environment: ${{ github.event.inputs.environment }}
      instance-id: ${{ steps.set_vars.outputs.instance-id }}
      aws-region: ${{ steps.set_vars.outputs.aws-region }}
      aws-role: ${{ steps.set_vars.outputs.aws-role }}
      artifact-name: 'build-output'
      aws-access-key-id: ${{ steps.set_vars.outputs.aws-access-key-id }}
      aws-secret-access-key: ${{ steps.set_vars.outputs.aws-secret-access-key }}
      app-path: ${{ steps.set_vars.outputs.app-path }}
      node-version: '18'
    steps:
      - id: set_vars
        name: Set variables and secrets as outputs
        run: |
          echo "instance-id=${{ secrets.AWS_PROD_INSTANCE_ID }}" >> $GITHUB_OUTPUT
          echo "aws-region=${{ secrets.AWS_PROD_REGION }}" >> $GITHUB_OUTPUT
          echo "aws-role=${{ secrets.AWS_PROD_ROLE_ARN }}" >> $GITHUB_OUTPUT
          echo "aws-access-key-id=${{ secrets.AWS_PROD_ACCESS_KEY_ID }}" >> $GITHUB_OUTPUT
          echo "aws-secret-access-key=${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}" >> $GITHUB_OUTPUT
          echo "app-path=${{ secrets.AWS_PROD_APP_PATH }}" >> $GITHUB_OUTPUT
      - run: echo "Set production environment variables"
      - run: echo "Using Node.js version 18 for stability"
        
  build:
    name: Build Job
    needs: vars
    uses: ./.github/workflows/_build.yml
    with:
      node-version: ${{ needs.vars.outputs.node-version }}
      artifact-name: ${{ needs.vars.outputs.artifact-name }}
      artifact-path: 'build'

  deploy:
    name: Deploy Job
    needs:
      - vars
      - build
    if: needs.vars.outputs.environment == 'production'
    uses: ./.github/workflows/_prod_deploy.yml
    with:
      instance-id: ${{ needs.vars.outputs.instance-id }}
      aws-region: ${{ needs.vars.outputs.aws-region }}
      aws-access-key-id: ${{ needs.vars.outputs.aws-access-key-id }}
      aws-secret-access-key: ${{ needs.vars.outputs.aws-secret-access-key }}
      app-path: ${{ needs.vars.outputs.app-path }}
      artifact-name: ${{ needs.vars.outputs.artifact-name }}