name: Test Deploy
on:
  push:
  workflow_dispatch:

jobs:

  vars:
    name: Vars Job
    runs-on: ubuntu-latest
    outputs:
      environment: 'production'
      instance-id: ${{ steps.set_vars.outputs.instance-id }}
      aws-region: ${{ steps.set_vars.outputs.aws-region }}
      aws-role: ${{ steps.set_vars.outputs.aws-role }}
      artifact-name: 'build-output'
      aws-access-key-id: ${{ steps.set_vars.outputs.aws-access-key-id }}
      aws-secret-access-key: ${{ steps.set_vars.outputs.aws-secret-access-key }}
      app-path: '/var/www/vhosts/multisender.easy-go.me_test_deploy'
      node-version: '22'
    steps:
      - id: set_vars
        name: Set variables and secrets as outputs
        run: |
          echo "instance-id=${{ secrets.AWS_PROD_INSTANCE_ID }}" >> $GITHUB_OUTPUT
          echo "aws-region=${{ secrets.AWS_PROD_REGION }}" >> $GITHUB_OUTPUT
          echo "aws-role=${{ secrets.AWS_PROD_ROLE_ARN }}" >> $GITHUB_OUTPUT
          echo "aws-access-key-id=${{ secrets.AWS_PROD_ACCESS_KEY_ID }}" >> $GITHUB_OUTPUT
          echo "aws-secret-access-key=${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}" >> $GITHUB_OUTPUT
      - run: echo "Set production environment variables"


  dummy_build:
    needs: vars
    name: Build( Dummy )
    runs-on: ubuntu-latest
    outputs:
      build-directory: ${{ steps.build-step.outputs.build-directory }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        id: build-step
        run: |
          echo "tetetetete" >> test.txt
          mkdir -p build
          cp test.txt build/
          echo "build-directory=$(pwd)/build" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.vars.outputs.artifact-name }}
          path: 'build'

  echo:
    needs: vars
    runs-on: ubuntu-latest
    steps:
      - run: "echo App Path: ${{ needs.vars.outputs.app-path }}"
      - run: "echo AWS Region (from secret): ${{ secrets.AWS_PROD_REGION }}"
      - run: "echo AWS Region (from output): ${{ needs.vars.outputs.aws-region }}"
      - run: "echo Artifact Name: ${{ needs.vars.outputs.artifact-name }}"
      - run: "echo AWS Role: ${{ needs.vars.outputs.aws-role }}"

  deploy:
    name: Deploy Job ( Prod )
    needs:
      - vars
      - dummy_build
    if: needs.vars.outputs.environment == 'production'
    uses: ./.github/workflows/_prod_deploy.yml
    with:
      instance-id: ${{ needs.vars.outputs.instance-id }}
      aws-region: ${{ needs.vars.outputs.aws-region }}
      aws-access-key-id: ${{ needs.vars.outputs.aws-access-key-id }}
      aws-secret-access-key: ${{ needs.vars.outputs.aws-secret-access-key }}
      app-path: ${{ needs.vars.outputs.app-path }}
      artifact-name: ${{ needs.vars.outputs.artifact-name }}