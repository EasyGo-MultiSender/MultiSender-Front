name: Deploy to Production
description: 'Deploy the application to production environment using AWS SSM'

inputs:
  instance-id:
    description: 'AWS EC2 instance ID'
    required: true
  region:
    description: 'AWS region'
    required: false
    default: 'ap-northeast-1'
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  app-path:
    description: 'Path to the application on the target server'
    required: false
    default: '/var/www/vhosts/multisender.easy-go.me'
  artifact-name:
    description: 'Name of the artifact to download'
    required: false
    default: 'build-output'

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.region }}

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ./build

    - name: Create deployment package
      id: create-package
      run: |
        cd build
        # デプロイパッケージをbase64エンコード
        CONTENT=$(tar -cz * | base64 -w0)
        echo "package_content=${CONTENT}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Deploy using SSM
      run: |
        # SSMを使用してデプロイスクリプトを実行
        aws ssm send-command \
          --instance-ids ${{ inputs.instance-id }} \
          --document-name "AWS-RunShellScript" \
          --parameters commands=["cd ${{ inputs.app-path }}", \
                                "rm -rf ./* || true", \
                                "echo \"${{ steps.create-package.outputs.package_content }}\" | base64 -d | tar -xz", \
                                "sudo su deploy", \
                                "pm2 restart npm --name multisender-pm2 -- run prod", \
                                "pm2 ls"] \
          --output text
      shell: bash